{"ast":null,"code":"import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nfunction createUseRender() {\n  let forwardMotionProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const useRender = (Component, props, projectionId, ref, _ref, isStatic) => {\n    let {\n      latestValues\n    } = _ref;\n    const useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = {\n      ...filteredProps,\n      ...visualProps,\n      ref\n    };\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const {\n      children\n    } = props;\n    const renderedChildren = useMemo(() => isMotionValue(children) ? children.get() : children, [children]);\n    if (projectionId) {\n      elementProps[\"data-projection-id\"] = projectionId;\n    }\n    return createElement(Component, {\n      ...elementProps,\n      children: renderedChildren\n    });\n  };\n  return useRender;\n}\nexport { createUseRender };","map":{"version":3,"names":["useMemo","createElement","useHTMLProps","filterProps","isSVGComponent","useSVGProps","isMotionValue","createUseRender","forwardMotionProps","arguments","length","undefined","useRender","Component","props","projectionId","ref","_ref","isStatic","latestValues","useVisualProps","visualProps","filteredProps","elementProps","children","renderedChildren","get"],"sources":["D:/LEARNING/projects/SchoolWebApplication/frontend/node_modules/framer-motion/dist/es/render/dom/use-render.mjs"],"sourcesContent":["import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,aAAa,QAAQ,OAAO;AAC9C,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,aAAa,QAAQ,uCAAuC;AAErE,SAASC,eAAeA,CAAA,EAA6B;EAAA,IAA5BC,kBAAkB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAC/C,MAAMG,SAAS,GAAGA,CAACC,SAAS,EAAEC,KAAK,EAAEC,YAAY,EAAEC,GAAG,EAAAC,IAAA,EAAoBC,QAAQ,KAAK;IAAA,IAA/B;MAAEC;IAAa,CAAC,GAAAF,IAAA;IACpE,MAAMG,cAAc,GAAGhB,cAAc,CAACS,SAAS,CAAC,GAC1CR,WAAW,GACXH,YAAY;IAClB,MAAMmB,WAAW,GAAGD,cAAc,CAACN,KAAK,EAAEK,YAAY,EAAED,QAAQ,EAAEL,SAAS,CAAC;IAC5E,MAAMS,aAAa,GAAGnB,WAAW,CAACW,KAAK,EAAE,OAAOD,SAAS,KAAK,QAAQ,EAAEL,kBAAkB,CAAC;IAC3F,MAAMe,YAAY,GAAG;MACjB,GAAGD,aAAa;MAChB,GAAGD,WAAW;MACdL;IACJ,CAAC;IACD;AACR;AACA;AACA;AACA;IACQ,MAAM;MAAEQ;IAAS,CAAC,GAAGV,KAAK;IAC1B,MAAMW,gBAAgB,GAAGzB,OAAO,CAAC,MAAOM,aAAa,CAACkB,QAAQ,CAAC,GAAGA,QAAQ,CAACE,GAAG,EAAE,GAAGF,QAAS,EAAE,CAACA,QAAQ,CAAC,CAAC;IACzG,IAAIT,YAAY,EAAE;MACdQ,YAAY,CAAC,oBAAoB,CAAC,GAAGR,YAAY;IACrD;IACA,OAAOd,aAAa,CAACY,SAAS,EAAE;MAC5B,GAAGU,YAAY;MACfC,QAAQ,EAAEC;IACd,CAAC,CAAC;EACN,CAAC;EACD,OAAOb,SAAS;AACpB;AAEA,SAASL,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}