{"ast":null,"code":"import { resolveElements } from '../utils/resolve-element.mjs';\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n  if (borderBoxSize) {\n    const {\n      inlineSize,\n      blockSize\n    } = borderBoxSize[0];\n    return {\n      width: inlineSize,\n      height: blockSize\n    };\n  } else if (target instanceof SVGElement && \"getBBox\" in target) {\n    return target.getBBox();\n  } else {\n    return {\n      width: target.offsetWidth,\n      height: target.offsetHeight\n    };\n  }\n}\nfunction notifyTarget(_ref) {\n  let {\n    target,\n    contentRect,\n    borderBoxSize\n  } = _ref;\n  var _a;\n  (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach(handler => {\n    handler({\n      target,\n      contentSize: contentRect,\n      get size() {\n        return getElementSize(target, borderBoxSize);\n      }\n    });\n  });\n}\nfunction notifyAll(entries) {\n  entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n  if (typeof ResizeObserver === \"undefined\") return;\n  observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n  if (!observer) createResizeObserver();\n  const elements = resolveElements(target);\n  elements.forEach(element => {\n    let elementHandlers = resizeHandlers.get(element);\n    if (!elementHandlers) {\n      elementHandlers = new Set();\n      resizeHandlers.set(element, elementHandlers);\n    }\n    elementHandlers.add(handler);\n    observer === null || observer === void 0 ? void 0 : observer.observe(element);\n  });\n  return () => {\n    elements.forEach(element => {\n      const elementHandlers = resizeHandlers.get(element);\n      elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n      if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n        observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n      }\n    });\n  };\n}\nexport { resizeElement };","map":{"version":3,"names":["resolveElements","resizeHandlers","WeakMap","observer","getElementSize","target","borderBoxSize","inlineSize","blockSize","width","height","SVGElement","getBBox","offsetWidth","offsetHeight","notifyTarget","_ref","contentRect","_a","get","forEach","handler","contentSize","size","notifyAll","entries","createResizeObserver","ResizeObserver","resizeElement","elements","element","elementHandlers","Set","set","add","observe","delete","unobserve"],"sources":["D:/LEARNING/projects/SchoolWebApplication/frontend/node_modules/framer-motion/dist/es/render/dom/resize/handle-element.mjs"],"sourcesContent":["import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n        const { inlineSize, blockSize } = borderBoxSize[0];\n        return { width: inlineSize, height: blockSize };\n    }\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\n        return target.getBBox();\n    }\n    else {\n        return {\n            width: target.offsetWidth,\n            height: target.offsetHeight,\n        };\n    }\n}\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {\n        handler({\n            target,\n            contentSize: contentRect,\n            get size() {\n                return getElementSize(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n            }\n        });\n    };\n}\n\nexport { resizeElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}