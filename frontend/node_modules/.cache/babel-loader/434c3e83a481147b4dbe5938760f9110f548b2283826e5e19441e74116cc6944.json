{"ast":null,"code":"import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n  const {\n    visualElement: parent\n  } = useContext(MotionContext);\n  const lazyContext = useContext(LazyContext);\n  const presenceContext = useContext(PresenceContext);\n  const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n  const visualElementRef = useRef();\n  /**\n   * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n   */\n  createVisualElement = createVisualElement || lazyContext.renderer;\n  if (!visualElementRef.current && createVisualElement) {\n    visualElementRef.current = createVisualElement(Component, {\n      visualState,\n      parent,\n      props,\n      presenceContext,\n      blockInitialAnimation: presenceContext ? presenceContext.initial === false : false,\n      reducedMotionConfig\n    });\n  }\n  const visualElement = visualElementRef.current;\n  useInsertionEffect(() => {\n    visualElement && visualElement.update(props, presenceContext);\n  });\n  useIsomorphicLayoutEffect(() => {\n    visualElement && visualElement.render();\n  });\n  useEffect(() => {\n    visualElement && visualElement.updateFeatures();\n  });\n  /**\n   * Ideally this function would always run in a useEffect.\n   *\n   * However, if we have optimised appear animations to handoff from,\n   * it needs to happen synchronously to ensure there's no flash of\n   * incorrect styles in the event of a hydration error.\n   *\n   * So if we detect a situtation where optimised appear animations\n   * are running, we use useLayoutEffect to trigger animations.\n   */\n  const useAnimateChangesEffect = window.HandoffAppearAnimations ? useIsomorphicLayoutEffect : useEffect;\n  useAnimateChangesEffect(() => {\n    if (visualElement && visualElement.animationState) {\n      visualElement.animationState.animateChanges();\n    }\n  });\n  return visualElement;\n}\nexport { useVisualElement };","map":{"version":3,"names":["useContext","useRef","useInsertionEffect","useEffect","PresenceContext","MotionContext","useIsomorphicLayoutEffect","LazyContext","MotionConfigContext","useVisualElement","Component","visualState","props","createVisualElement","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","reducedMotion","visualElementRef","renderer","current","blockInitialAnimation","initial","update","render","updateFeatures","useAnimateChangesEffect","window","HandoffAppearAnimations","animationState","animateChanges"],"sources":["D:/LEARNING/projects/SchoolWebApplication/frontend/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs"],"sourcesContent":["import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,kBAAkB,EAAEC,SAAS,QAAQ,OAAO;AACzE,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,aAAa,QAAQ,uCAAuC;AACrE,SAASC,yBAAyB,QAAQ,uCAAuC;AACjF,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,mBAAmB,QAAQ,uCAAuC;AAE3E,SAASC,gBAAgBA,CAACC,SAAS,EAAEC,WAAW,EAAEC,KAAK,EAAEC,mBAAmB,EAAE;EAC1E,MAAM;IAAEC,aAAa,EAAEC;EAAO,CAAC,GAAGf,UAAU,CAACK,aAAa,CAAC;EAC3D,MAAMW,WAAW,GAAGhB,UAAU,CAACO,WAAW,CAAC;EAC3C,MAAMU,eAAe,GAAGjB,UAAU,CAACI,eAAe,CAAC;EACnD,MAAMc,mBAAmB,GAAGlB,UAAU,CAACQ,mBAAmB,CAAC,CAACW,aAAa;EACzE,MAAMC,gBAAgB,GAAGnB,MAAM,EAAE;EACjC;AACJ;AACA;EACIY,mBAAmB,GAAGA,mBAAmB,IAAIG,WAAW,CAACK,QAAQ;EACjE,IAAI,CAACD,gBAAgB,CAACE,OAAO,IAAIT,mBAAmB,EAAE;IAClDO,gBAAgB,CAACE,OAAO,GAAGT,mBAAmB,CAACH,SAAS,EAAE;MACtDC,WAAW;MACXI,MAAM;MACNH,KAAK;MACLK,eAAe;MACfM,qBAAqB,EAAEN,eAAe,GAChCA,eAAe,CAACO,OAAO,KAAK,KAAK,GACjC,KAAK;MACXN;IACJ,CAAC,CAAC;EACN;EACA,MAAMJ,aAAa,GAAGM,gBAAgB,CAACE,OAAO;EAC9CpB,kBAAkB,CAAC,MAAM;IACrBY,aAAa,IAAIA,aAAa,CAACW,MAAM,CAACb,KAAK,EAAEK,eAAe,CAAC;EACjE,CAAC,CAAC;EACFX,yBAAyB,CAAC,MAAM;IAC5BQ,aAAa,IAAIA,aAAa,CAACY,MAAM,EAAE;EAC3C,CAAC,CAAC;EACFvB,SAAS,CAAC,MAAM;IACZW,aAAa,IAAIA,aAAa,CAACa,cAAc,EAAE;EACnD,CAAC,CAAC;EACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,uBAAuB,GAAGC,MAAM,CAACC,uBAAuB,GACxDxB,yBAAyB,GACzBH,SAAS;EACfyB,uBAAuB,CAAC,MAAM;IAC1B,IAAId,aAAa,IAAIA,aAAa,CAACiB,cAAc,EAAE;MAC/CjB,aAAa,CAACiB,cAAc,CAACC,cAAc,EAAE;IACjD;EACJ,CAAC,CAAC;EACF,OAAOlB,aAAa;AACxB;AAEA,SAASL,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}